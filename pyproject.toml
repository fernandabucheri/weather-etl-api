[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "weather-etl-api"
description = "ETL automatizado com Airflow/Python e API FastAPI para dados meteorológicos"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Weather ETL Team"},
]
keywords = ["weather", "etl", "api", "fastapi", "airflow", "postgresql"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/your-username/airflow-weather-etl-api"
Repository = "https://github.com/your-username/airflow-weather-etl-api"
Issues = "https://github.com/your-username/airflow-weather-etl-api/issues"

# Configuração do Black (formatador de código)
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Diretórios a excluir
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# Configuração do isort (organizador de imports)
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["etl", "api"]
known_third_party = [
    "fastapi",
    "uvicorn",
    "psycopg2",
    "requests",
    "pytest",
    "pydantic",
    "schedule"
]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = [
    "*/migrations/*",
    "*/.venv/*",
    "*/venv/*",
    "*/env/*"
]

# Configuração do Coverage.py
[tool.coverage.run]
source = ["etl", "api"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "*/.venv/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "setup.py",
    "conftest.py"
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Configuração do MyPy (verificador de tipos - opcional)
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "psycopg2.*",
    "schedule.*",
    "requests.*"
]
ignore_missing_imports = true

# Configuração do setuptools_scm (versionamento)
[tool.setuptools_scm]
write_to = "version.py"

